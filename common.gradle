/*
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'signing'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

allprojects {
    def versionKey = project.name + "_version"
    group = parent.ext.libProps['groupId']
    version = parent.ext.libProps[versionKey]

    task printProjectVersion {
        doLast {
            println ">> " + project.name + " version is " + version
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            lib(MavenPublication) {
                version = project.version
                groupId project.group
                artifactId project.name

                from components.java

                afterEvaluate {
                    artifact sourcesJar
                    artifact javadocJar

                    pom {
                        name = project.name
                        description = "A tiny library for representing mutable states and the types that drive said mutations"
                        url = 'https://github.com/tunjid/Mutator'
                        licenses {
                            license {
                                name = 'Apache License 2.0'
                                url = 'https://github.com/tunjid/Mutator/blob/main/LICENSE'
                            }
                        }
                        developers {
                            developer {
                                id = 'tunjid'
                                name = 'Adetunji Dahunsi'
                                email = 'tjdah100@gmail.com'
                            }
                        }
                        scm {
                            connection = 'scm:git:github.com/tunjid/Mutator.git'
                            developerConnection = 'scm:git:ssh://github.com/tunjid/Mutator.git'
                            url = 'https://github.com/tunjid/Mutator/tree/main'
                        }
                    }
                }
            }
        }
        repositories {
            if (parent.ext.localProps.publishUrl) {
                maven {
                    name = parent.ext.localProps.repoName
                    url = parent.ext.localProps.publishUrl
                    credentials {
                        username = parent.ext.localProps.username
                        password = parent.ext.localProps.password
                    }
                }
            }
        }
    }

    signing {
        if (parent.ext.localProps.signingKey && parent.ext.localProps.signingPassword) {
            def signingKey = parent.ext.localProps.signingKey
            def signingPassword = parent.ext.localProps.signingPassword
            useInMemoryPgpKeys(signingKey, signingPassword)
            sign publishing.publications
        }
    }
}

// Gradle task to generate sources after building a release aar
task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

//signing {
//    sign publishing.publications.mavenJava
//}


javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
